Program([FuncDecl(Id(main),[],IntType,Block([VarDecl(Id(n),IntType),VarDecl(Id(i),IntType),VarDecl(Id(flag),IntType),CallExpr(Id(printf),[StringLiteral(Enter a positive integer: )]),CallExpr(Id(scanf),[Id(n)]),For(BinaryOp(=,Id(i),IntLiteral(2));BinaryOp(<=,Id(i),BinaryOp(/,Id(n),IntLiteral(2)));BinaryOp(=,Id(i),BinaryOp(+,Id(i),IntLiteral(1)));Block([If(BinaryOp(==,BinaryOp(%,Id(n),Id(i)),IntLiteral(0)),Block([BinaryOp(=,Id(flag),IntLiteral(1)),Break()]))])),If(BinaryOp(==,Id(n),IntLiteral(1)),Block([CallExpr(Id(printf),[StringLiteral(1 is neither a prime nor a composite number.)])]),Block([If(BinaryOp(==,Id(flag),IntLiteral(0)),CallExpr(Id(printf),[Id(n)]),CallExpr(Id(printf),[Id(n)]))])),Return(IntLiteral(0))]))])