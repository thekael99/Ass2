Program([FuncDecl(Id(checkPrimeNumber),[VarDecl(Id(n),IntType)],IntType,Block([VarDecl(Id(j),IntType),VarDecl(Id(flag),IntType),For(BinaryOp(=,Id(j),IntLiteral(2));BinaryOp(<=,Id(j),BinaryOp(/,Id(n),IntLiteral(2)));BinaryOp(=,Id(j),BinaryOp(+,Id(j),IntLiteral(1)));Block([If(BinaryOp(==,BinaryOp(%,Id(n),Id(j)),IntLiteral(0)),Block([BinaryOp(=,Id(flag),IntLiteral(0)),Break()]))])),Return(Id(flag))])),FuncDecl(Id(main),[],IntType,Block([VarDecl(Id(n1),IntType),VarDecl(Id(n2),IntType),VarDecl(Id(i),IntType),VarDecl(Id(flag),IntType),CallExpr(Id(printf),[StringLiteral(Enter two positive integers: )]),CallExpr(Id(scanf),[Id(n1),Id(n2)]),CallExpr(Id(printf),[Id(n1),Id(n2)]),For(BinaryOp(=,Id(i),BinaryOp(+,Id(n1),IntLiteral(1)));BinaryOp(<,Id(i),Id(n2));BinaryOp(=,Id(i),BinaryOp(+,Id(i),IntLiteral(1)));Block([BinaryOp(=,Id(flag),CallExpr(Id(checkPrimeNumber),[Id(i)])),If(BinaryOp(==,Id(flag),IntLiteral(1)),CallExpr(Id(printf),[Id(i)]))])),Return(IntLiteral(0))]))])